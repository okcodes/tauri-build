name: Continuous Integration

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  test-typescript:
    name: TypeScript Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        id: setup-node
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: npm

      - name: Install Dependencies
        id: npm-ci
        run: npm ci

      - name: Check Format
        id: npm-format-check
        run: npm run format:check

      - name: Lint
        id: npm-lint
        run: npm run lint

      - name: Test
        id: npm-ci-test
        run: npm run ci-test

  test-action:
    name: GitHub Actions Test
    runs-on: macos-latest
    permissions:
      contents: 'write'

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        run: npm i -g pnpm

      - id: get-tag
        # The pre-release branch name will be like "app-name-v0.0.0+2024.12.31T10.33.59Z-6a7a8dd".
        run: "echo tag={NAME}-v{VERSION}+$(date -u '+%Y.%m.%dT%H.%M.%SZ')-$(echo ${{ github.sha }} | cut -c1-7) >> $GITHUB_OUTPUT"
      - name: Test Local Action
        id: test-action
        uses: ./
        with:
          tauriContext: ./micro-demo/
          tagTemplate: ${{ steps.get-tag.outputs.tag }}
          draft: false
          prerelease: true
          buildOptions: --target x86_64-apple-darwin --bundles app,dmg --verbose
          expectedArtifacts: 2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Print Output
        id: output
        run: |
          echo "App Name: ${{ steps.test-action.outputs.appName }}"
          echo "App Version: ${{ steps.test-action.outputs.appVersion }}"
          echo "Tag: ${{ steps.test-action.outputs.tag }}"
